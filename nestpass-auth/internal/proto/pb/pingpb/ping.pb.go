// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ping.proto

package pingpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingData struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingData) Reset()         { *m = PingData{} }
func (m *PingData) String() string { return proto.CompactTextString(m) }
func (*PingData) ProtoMessage()    {}
func (*PingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d51d96c3ad891f5, []int{0}
}

func (m *PingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingData.Unmarshal(m, b)
}
func (m *PingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingData.Marshal(b, m, deterministic)
}
func (m *PingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingData.Merge(m, src)
}
func (m *PingData) XXX_Size() int {
	return xxx_messageInfo_PingData.Size(m)
}
func (m *PingData) XXX_DiscardUnknown() {
	xxx_messageInfo_PingData.DiscardUnknown(m)
}

var xxx_messageInfo_PingData proto.InternalMessageInfo

func (m *PingData) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*PingData)(nil), "ping.PingData")
}

func init() {
	proto.RegisterFile("ping.proto", fileDescriptor_6d51d96c3ad891f5)
}

var fileDescriptor_6d51d96c3ad891f5 = []byte{
	// 118 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc8, 0xcc, 0x4b,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x54, 0xb8, 0x38, 0x02, 0x32,
	0xf3, 0xd2, 0x5d, 0x12, 0x4b, 0x12, 0x85, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3,
	0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x23, 0x53, 0x2e, 0x6e, 0x90, 0xaa,
	0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x35, 0x2e, 0x16, 0x10, 0x57, 0x88, 0x4f, 0x0f,
	0x6c, 0x1e, 0xcc, 0x00, 0x29, 0x34, 0xbe, 0x13, 0x6f, 0x14, 0xb7, 0x9e, 0x7e, 0x41, 0x92, 0x3e,
	0x48, 0xb4, 0x20, 0x29, 0x89, 0x0d, 0x6c, 0xb1, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x38, 0xee,
	0x19, 0x64, 0x86, 0x00, 0x00, 0x00,
}
